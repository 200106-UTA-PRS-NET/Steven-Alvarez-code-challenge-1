--Comments in SQL

--Different Types of Queries in SQL
	-- SQL queries are not case sensitive. e.g. insert or INSERt or INserT is the same, name = 'FRED' is same as 'FRED'
	-- DDL - Data definition Language
		-- used to make changes in the database object(Tables, views, function, stored procedure. triggers 
		-- Create, alter, drop (DROP - dropping a DBO like table deletes the physica; copy of the dbo like schema of the table will also delete 
	-- DML - Data Manipulation Language
		-- DQL - DAta Query Language --> to read data -> SELECT
		-- INSTERT - to add Data into the DB
		-- UPDATE -- to modify the existing data in the DB
		-- DELETE - to delete the existing data or table in DB (delete a record or number or records or all the records from the table but preserving the schema of the table and indexes)
		-- TRUNCATE - delete everything in a table aswell as the index, 
				--index is a feield to directly identify the record
				-- Delete all records along with indexes
	-- DCL - Data Control Language, used by Admins of the DB to grant or revoke axis to the users
		-- GRANT USER
		-- REVOKE USER
		-- Not generall used by developers, developers use DML and DDL

-- Types in SQL
	-- Strings 
	-- char[] -> Characters of size n, 
	-- varchar() -> variable of size n but doesnt saquire size n, 
	-- nchar[] -> store characters in unicode format
	declare @empname char(10);
	set @empname = 'Fred';
	select @empname as 'Employee Name', LEN(@empname) as 'Length', COUNT(@empname) as 'Number of fields in the column', UPPER(@empname) as 'Name is uppercase';
	declare @empnames varchar(10);
	declare @empnameunicode nchar(10); --store characters in unicode format
	-- some more sting mani[ulation functions lower, stuff, concat, ltrim, rtirm, trim, etc.

	--Numbers - tinyint, float, int , decimal, money
	-- DataTime - to get current date and time in different formats
			-- DateTime
			-- DateTime2
			declare @currentdate datetime;
			set @currentdate = GETDATE();
			select DATEPART(MM, @currentdate) as 'Month in Numbers', DATENAME(MM, @currentdate) as 'Month in words';
			-- date functions. datediff etc......

--- beggining with creation and manipulation with data base
create database EmployeeDb;
go; --this ensures that sql will execute the statement or variable and then jump to next statement or query after
use EmployeeDb;
go;
create schema Revature; -- Schema can be an extra layer for all your DB objects
go;
create table Revature.Employee(
-- name of the column, datatype, constraints (Identity will give autogenerated value(seed, incremental value)
Id int Identity(1,1), -- primary key,
fname varchar not null,  -- not null us constraint which engorces to have a value 
lname varchar not null,
mname varchar,
age int check (age>=16 and age<= 70), -- check constraint will enforce if the value added is valud as per the condition,
startdate datetime default(getdate()),
salary money default(5000),
ssn char(9) unique,
Primary key (Id)
)
-- constaints are enflorced before adding/updating a value 
 -- not null
 -- unique
 -- null
 -- primary
 -- foriegn
 -- check
 -- default

 alter table Revature.Employee
	add deptid int default (1)

alter table Revature.Employee
	drop column fname, lname, mname

alter table Revature.Employee
	add fname varchar(max),
	lname varchar(max),
	mname varchar(max)

insert into Revature.Employee(fname,lname,mname,age,ssn) values ('Carol', 'Baxter', 'L')

select * from Revature.Employee

delete Revature.Employee

create table Revature.Department(
Id int PRimary key,
name varchar(max) not null,
phone char(10) not null
)

insert into Revature.Department value(1.
alter table Revature.Employee
	add contraint FK_Dept_Employee_Id foreign key(Id) references Revature.Department (Id)
	
	create database Customer

	use Customer

create table Customer(
	FirstName varchar(50),
	LastName varchar(50),
	Age int
)